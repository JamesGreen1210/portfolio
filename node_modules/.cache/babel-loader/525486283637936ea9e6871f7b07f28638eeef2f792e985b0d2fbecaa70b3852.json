{"ast":null,"code":"var _jsxFileName = \"/Users/jamesgreen/Downloads/Project_Website/my-app/src/components/Projects.jsx\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { useInView } from 'react-intersection-observer';\nimport styles from '../styles/Projects.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Projects() {\n  var _s = $RefreshSig$();\n  const projects = [{\n    id: 1,\n    name: 'Project 1',\n    description: 'This is a description of Project 1.',\n    image: '../assets/download.png'\n  }, {\n    id: 2,\n    name: 'Project 2',\n    description: 'This is a description of Project 2.',\n    image: '../assets/download.png'\n  }, {\n    id: 3,\n    name: 'Project 3',\n    description: 'This is a description of Project 3.',\n    image: '../assets/download.png'\n  }, {\n    id: 4,\n    name: 'Project 4',\n    description: 'This is a description of Project 4.',\n    image: '../assets/download.png'\n  }, {\n    id: 5,\n    name: 'Project 5',\n    description: 'This is a description of Project 5.',\n    image: '../assets/download.png'\n  }, {\n    id: 6,\n    name: 'Project 6',\n    description: 'This is a description of Project 6.',\n    image: '../assets/download.png'\n  }, {\n    id: 7,\n    name: 'Project 7',\n    description: 'This is a description of Project 7.',\n    image: '../assets/download.png'\n  }, {\n    id: 8,\n    name: 'Project 8',\n    description: 'This is a description of Project 8.',\n    image: '../assets/download.png'\n  }, {\n    id: 9,\n    name: 'Project 9',\n    description: 'This is a description of Project 9.',\n    image: '../assets/download.png'\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.projects,\n    children: _s(projects.map(_s((project, index) => {\n      _s();\n      const {\n        ref,\n        inView\n      } = useInView({\n        triggerOnce: false,\n        // Change to true if you want the fade effect to only occur once\n        threshold: 0.1 // Adjust as necessary\n      });\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: ref,\n        style: {\n          opacity: inView ? 1 : 0.5\n        } // Adjust as necessary\n        ,\n        className: styles.project,\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: project.image,\n          alt: project.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: project.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this);\n    }, \"oyd/E8SD7Fx4uOp6P7gVV2pVlaE=\", false, function () {\n      return [useInView];\n    })), \"oyd/E8SD7Fx4uOp6P7gVV2pVlaE=\", false, function () {\n      return [useInView];\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n_c = Projects;\nexport default Projects;\nvar _c;\n$RefreshReg$(_c, \"Projects\");","map":{"version":3,"names":["React","Link","useInView","styles","jsxDEV","_jsxDEV","Projects","_s","$RefreshSig$","projects","id","name","description","image","className","children","map","project","index","ref","inView","triggerOnce","threshold","style","opacity","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/jamesgreen/Downloads/Project_Website/my-app/src/components/Projects.jsx"],"sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { useInView } from 'react-intersection-observer';\nimport styles from '../styles/Projects.module.css';\n\nfunction Projects() {\n  const projects = [\n    {\n      id: 1,\n      name: 'Project 1',\n      description: 'This is a description of Project 1.',\n      image: '../assets/download.png'\n    },\n    {\n      id: 2,\n      name: 'Project 2',\n      description: 'This is a description of Project 2.',\n      image: '../assets/download.png'\n    },\n    {\n      id: 3,\n      name: 'Project 3',\n      description: 'This is a description of Project 3.',\n      image: '../assets/download.png'\n    },\n    {\n      id: 4,\n      name: 'Project 4',\n      description: 'This is a description of Project 4.',\n      image: '../assets/download.png'\n    },\n    {\n      id: 5,\n      name: 'Project 5',\n      description: 'This is a description of Project 5.',\n      image: '../assets/download.png'\n    },\n    {\n      id: 6,\n      name: 'Project 6',\n      description: 'This is a description of Project 6.',\n      image: '../assets/download.png'\n    },\n    {\n      id: 7,\n      name: 'Project 7',\n      description: 'This is a description of Project 7.',\n      image: '../assets/download.png'\n    },\n    {\n      id: 8,\n      name: 'Project 8',\n      description: 'This is a description of Project 8.',\n      image: '../assets/download.png'\n    },\n    {\n      id: 9,\n      name: 'Project 9',\n      description: 'This is a description of Project 9.',\n      image: '../assets/download.png'\n    }\n  ];\n\n  return (\n    <div className={styles.projects}>\n      {projects.map((project, index) => {\n        const { ref, inView } = useInView({\n          triggerOnce: false, // Change to true if you want the fade effect to only occur once\n          threshold: 0.1, // Adjust as necessary\n        });\n\n        return (\n          <div\n            key={index}\n            ref={ref}\n            style={{ opacity: inView ? 1 : 0.5 }} // Adjust as necessary\n            className={styles.project}\n          >\n            <img src={project.image} alt={project.name} />\n            <p>{project.description}</p>\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n\nexport default Projects;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}